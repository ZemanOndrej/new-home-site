# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    
    environment:
      name: PROD

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install # will run `yarn install` command
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: build # will run `yarn build` command
        env:
          REACT_APP_PROD_API_KEY: ${{secrets.REACT_APP_PROD_API_KEY}}
          REACT_APP_PROD_AUTH_DOMAIN: ${{secrets.REACT_APP_PROD_AUTH_DOMAIN}}
          REACT_APP_PROD_DATABASE_URL: ${{secrets.REACT_APP_PROD_DATABASE_URL}}
          REACT_APP_PROD_PROJECT_ID: ${{secrets.REACT_APP_PROD_PROJECT_ID}}
          REACT_APP_PROD_STORAGE_BUCKET: ${{secrets.REACT_APP_PROD_STORAGE_BUCKET}}
          REACT_APP_PROD_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_PROD_MESSAGING_SENDER_ID}}
          REACT_APP_PROD_ID: ${{secrets.REACT_APP_PROD_ID}}
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: test # will run `yarn test` command
      - name: Publish
        uses: nogsantos/scp-deploy@master
        with:
          src: ./build/*
          host: ${{ secrets.SSH_HOST }}
          remote: ${{ secrets.SSH_DIR }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
